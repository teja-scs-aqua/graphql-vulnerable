name: Build & Test

on: [pull_request,push]

jobs:
  scan:
    name: Code Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --debug --sast --reachability --package-json --scanners misconfig,vuln,secret --db-repository=registry.aquasec.com/trivy-db:2 --checks-bundle-repository=registry.aquasec.com/trivy-checks:1 --java-db-repository=registry.aquasec.com/trivy-java-db:1 .
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          ACTIONS_RUNTIME_TOKEN: ${{ secrets.TOKEN }}   
          TRIVY_USERNAME: ${{ secrets.TRIVY_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.TRIVY_PASSWORD }} 
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)

  test:
    name: Build and Test
    runs-on: ubuntu-24.04
    needs: scan
    steps:
      - uses: actions/checkout@v3

      - name: Setup pipeline enforcer
        uses: aquasecurity/pipeline-enforcer-action@main
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Run DVGA
        run: |
          nohup python3 ./app.py &
      - name: Wait for server (sleep 5 secs)
        run: |
          sleep 5
      - name: Run DVGA Tests
        run: |
          python3 -m pytest tests/*
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3
      # Added for SBOM generation
      - name: Build Docker Image
        run: docker build -t "$GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER" .
      - name: Manifest Generation
        run: |
          export BILLY_SERVER=https://billy.codesec.aquasec.com
          export TRIVY_USERNAME=${{ secrets.TRIVY_USERNAME }}
          export TRIVY_PASSWORD=${{ secrets.TRIVY_PASSWORD }}
          export TRIVY_DB_REPOSITORY=registry.aquasec.com/trivy-db:2
          export TRIVY_JAVA_DB_REPOSITORY=registry.aquasec.com/trivy-java-db:1
          export TRIVY_CHECKS_BUNDLE_REPOSITORY=registry.aquasec.com/trivy-checks:1
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --artifact-path "$GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER"
